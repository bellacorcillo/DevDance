{"ast":null,"code":"import React from 'react';\nimport axios from 'axios';\nimport './CreateAccount.css';\nimport { API_BASE_URL } from './config'; // Import the API_BASE_URL from your config\n\nclass CreateAccount extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      username: '',\n      email: '',\n      password: '',\n      confirmPassword: '',\n      errorMessage: '',\n      isAccountPageLoaded: false // Add a flag to track if the account page is loaded\n    };\n\n    // Bind event handlers\n    this.handleInputChange = this.handleInputChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  // Add a new lifecycle method to load the account page\n  async componentDidMount() {\n    try {\n      // Construct the full URL using the API_BASE_URL\n      const accountCreationUrl = `${API_BASE_URL}/create-account`;\n\n      // Send a GET request to retrieve the account creation page\n      const response = await axios.get(accountCreationUrl); // Use the constructed URL\n      // Update the state to indicate that the account page is loaded\n      this.setState({\n        isAccountPageLoaded: true\n      });\n    } catch (error) {\n      console.error('Error:', error);\n      // Handle any errors here\n    }\n  }\n\n  // Handle input field changes\n  handleInputChange(event) {\n    const {\n      name,\n      value\n    } = event.target;\n    this.setState({\n      [name]: value\n    });\n  }\n\n  // Handle form submission\n  async handleSubmit(event) {\n    event.preventDefault();\n    if (this.state.password !== this.state.confirmPassword) {\n      this.setState({\n        errorMessage: 'Passwords do not match.'\n      });\n      return;\n    }\n    try {\n      // Construct the full URL using the API_BASE_URL\n      const createAccountUrl = `${API_BASE_URL}/create-account`;\n\n      // Send a POST request to the /create-account route in the backend\n      await axios.post(createAccountUrl, {\n        username: this.state.username,\n        email: this.state.email,\n        password: this.state.password\n      });\n\n      // Redirect to the login page or wherever you'd like after a successful registration\n      this.props.history.push('/login');\n    } catch (error) {\n      this.setState({\n        errorMessage: 'Registration failed. Please try again.'\n      });\n    }\n  }\n  render() {\n    // Check if the account page is loaded before rendering the form\n    if (!this.state.isAccountPageLoaded) {\n      return /*#__PURE__*/React.createElement('div', null, 'Loading...');\n    }\n    return /*#__PURE__*/React.createElement('div', {\n      className: 'create-account-container'\n    }, /*#__PURE__*/React.createElement('h2', null, 'Create Account'), this.state.errorMessage ? /*#__PURE__*/React.createElement('p', {\n      className: 'error'\n    }, this.state.errorMessage) : null, /*#__PURE__*/React.createElement('form', {\n      onSubmit: this.handleSubmit\n    }, /*#__PURE__*/React.createElement('div', {\n      className: 'input-group'\n    }, /*#__PURE__*/React.createElement('label', null, 'Username:'), /*#__PURE__*/React.createElement('input', {\n      type: 'text',\n      name: 'username',\n      value: this.state.username,\n      onChange: this.handleInputChange,\n      required: true\n    })), /*#__PURE__*/React.createElement('div', {\n      className: 'input-group'\n    }, /*#__PURE__*/React.createElement('label', null, 'Email:'), /*#__PURE__*/React.createElement('input', {\n      type: 'email',\n      name: 'email',\n      value: this.state.email,\n      onChange: this.handleInputChange,\n      required: true\n    })), /*#__PURE__*/React.createElement('div', {\n      className: 'input-group'\n    }, /*#__PURE__*/React.createElement('label', null, 'Password:'), /*#__PURE__*/React.createElement('input', {\n      type: 'password',\n      name: 'password',\n      value: this.state.password,\n      onChange: this.handleInputChange,\n      required: true\n    })), /*#__PURE__*/React.createElement('div', {\n      className: 'input-group'\n    }, /*#__PURE__*/React.createElement('label', null, 'Confirm Password:'), /*#__PURE__*/React.createElement('input', {\n      type: 'password',\n      name: 'confirmPassword',\n      value: this.state.confirmPassword,\n      onChange: this.handleInputChange,\n      required: true\n    })), /*#__PURE__*/React.createElement('button', {\n      type: 'submit'\n    }, 'Create Account')));\n  }\n}\nexport default CreateAccount;","map":{"version":3,"names":["React","axios","API_BASE_URL","CreateAccount","Component","constructor","props","state","username","email","password","confirmPassword","errorMessage","isAccountPageLoaded","handleInputChange","bind","handleSubmit","componentDidMount","accountCreationUrl","response","get","setState","error","console","event","name","value","target","preventDefault","createAccountUrl","post","history","push","render","createElement","className","onSubmit","type","onChange","required"],"sources":["/Users/isabellacorcillo/Desktop/UNLV/lembasbreak/frontend/src/components/CreateAccount.js"],"sourcesContent":["import React from 'react';\nimport axios from 'axios';\nimport './CreateAccount.css';\nimport { API_BASE_URL } from './config'; // Import the API_BASE_URL from your config\n\nclass CreateAccount extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            username: '',\n            email: '',\n            password: '',\n            confirmPassword: '',\n            errorMessage: '',\n            isAccountPageLoaded: false, // Add a flag to track if the account page is loaded\n        };\n\n        // Bind event handlers\n        this.handleInputChange = this.handleInputChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    // Add a new lifecycle method to load the account page\n    async componentDidMount() {\n        try {\n            // Construct the full URL using the API_BASE_URL\n            const accountCreationUrl = `${API_BASE_URL}/create-account`;\n\n            // Send a GET request to retrieve the account creation page\n            const response = await axios.get(accountCreationUrl); // Use the constructed URL\n            // Update the state to indicate that the account page is loaded\n            this.setState({ isAccountPageLoaded: true });\n        } catch (error) {\n            console.error('Error:', error);\n            // Handle any errors here\n        }\n    }\n\n    // Handle input field changes\n    handleInputChange(event) {\n        const { name, value } = event.target;\n        this.setState({ [name]: value });\n    }\n\n    // Handle form submission\n    async handleSubmit(event) {\n        event.preventDefault();\n\n        if (this.state.password !== this.state.confirmPassword) {\n            this.setState({ errorMessage: 'Passwords do not match.' });\n            return;\n        }\n\n        try {\n            // Construct the full URL using the API_BASE_URL\n            const createAccountUrl = `${API_BASE_URL}/create-account`;\n\n            // Send a POST request to the /create-account route in the backend\n            await axios.post(createAccountUrl, {\n                username: this.state.username,\n                email: this.state.email,\n                password: this.state.password,\n            });\n\n            // Redirect to the login page or wherever you'd like after a successful registration\n            this.props.history.push('/login');\n        } catch (error) {\n            this.setState({ errorMessage: 'Registration failed. Please try again.' });\n        }\n    }\n\n    render() {\n        // Check if the account page is loaded before rendering the form\n        if (!this.state.isAccountPageLoaded) {\n            return React.createElement('div', null, 'Loading...');\n        }\n\n        return (\n            React.createElement('div', { className: 'create-account-container' },\n                React.createElement('h2', null, 'Create Account'),\n                this.state.errorMessage ? React.createElement('p', { className: 'error' }, this.state.errorMessage) : null,\n                React.createElement('form', { onSubmit: this.handleSubmit },\n                    React.createElement('div', { className: 'input-group' },\n                        React.createElement('label', null, 'Username:'),\n                        React.createElement('input', {\n                            type: 'text',\n                            name: 'username',\n                            value: this.state.username,\n                            onChange: this.handleInputChange,\n                            required: true,\n                        })\n                    ),\n                    React.createElement('div', { className: 'input-group' },\n                        React.createElement('label', null, 'Email:'),\n                        React.createElement('input', {\n                            type: 'email',\n                            name: 'email',\n                            value: this.state.email,\n                            onChange: this.handleInputChange,\n                            required: true,\n                        })\n                    ),\n                    React.createElement('div', { className: 'input-group' },\n                        React.createElement('label', null, 'Password:'),\n                        React.createElement('input', {\n                            type: 'password',\n                            name: 'password',\n                            value: this.state.password,\n                            onChange: this.handleInputChange,\n                            required: true,\n                        })\n                    ),\n                    React.createElement('div', { className: 'input-group' },\n                        React.createElement('label', null, 'Confirm Password:'),\n                        React.createElement('input', {\n                            type: 'password',\n                            name: 'confirmPassword',\n                            value: this.state.confirmPassword,\n                            onChange: this.handleInputChange,\n                            required: true,\n                        })\n                    ),\n                    React.createElement('button', { type: 'submit' }, 'Create Account')\n                )\n            )\n        );\n    }\n}\n\nexport default CreateAccount;\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}